services:
  db:
    image: postgis/postgis:15-3.3
    container_name: crophealth-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-12345}
      POSTGRES_DB: ${POSTGRES_DB:-Crop_Health}
      POSTGIS_GDAL_ENABLED_DRIVERS: "GTiff VRT COG" 
      GDAL_DATA: "/usr/share/gdal/3.2"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-Crop_Health}"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build: .
    container_name: crophealth-app
    user: "0"  
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:-Crop_Health}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-12345}
      POSTGRES_PORT: "5432"
      PYTHONUNBUFFERED: "1"
      OMP_NUM_THREADS: "1"           # OpenMP (NumPy/BLAS)
      OPENBLAS_NUM_THREADS: "1"       # OpenBLAS
      NUMEXPR_NUM_THREADS: "1"      # if numexpr is installed
      MKL_NUM_THREADS: "1"            # harmless if MKL not used
    volumes:
      - .:/app
      - ./data:/app/data
    # if your image uses micromamba env "ndvi":
    command: ["micromamba","run","-n","ndvi","python","main.py"]
    # if not using micromamba, then:
    # command: ["python","main.py"]

volumes:
  pgdata:
